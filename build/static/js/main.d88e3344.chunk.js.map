{"version":3,"sources":["logo.svg","Wiki.jsx","Result.jsx","Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wiki","title","about","link","Card","style","maxWidth","CardContent","Typography","gutterBottom","variant","component","includes","replace","color","CardActions","Button","size","href","Result","hash","description","lastSeen","score","titleText","document","createElement","innerHTML","textContent","innerText","descriptionText","paddingTop","CardActionArea","split","Home","props","_search","query","setState","wiki","results","queryArray","i","length","toUpperCase","slice","toLowerCase","console","log","fetch","then","response","text","data","doc","DOMParser","parseFromString","_getElementByXpath","catch","error","json","hits","createCards","rows","result","push","state","value","path","evaluate","XPathResult","STRING_TYPE","stringValue","Fragment","this","display","flexDirection","justifyContent","alignItems","height","padding","width","onChange","newValue","onRequestSearch","onCancelSearch","textAlign","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d88e3344.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const Wiki = ({ title, about, link }) => {\n  if (about != null && about != \"\") {\n    return (\n      <Card style={{ maxWidth: \"345\" }}>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title.includes(\"_\") ? title.replace(\"_\", \" \") : title}\n          </Typography>\n          <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n            {about}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"medium\" color=\"primary\">\n            <a href={link}>Wiki</a>\n          </Button>\n          <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n            <div>\n              <p>\n                Created on: 2017-05 from the{\" \"}\n                <a href=\"http://wiki.kiwix.org/wiki/Content_in_all_languages\">\n                  kiwix ZIM file\n                </a>\n              </p>\n            </div>\n          </Typography>\n        </CardActions>\n      </Card>\n    );\n  } else {\n    return <div></div>; \n  }\n};","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport const Result = ({ title, hash, description, lastSeen, score, size }) => {\n  var titleText = document.createElement(\"div\");\n  titleText.innerHTML = title;\n  titleText = titleText.textContent || titleText.innerText || \"\";\n\n  var descriptionText = document.createElement(\"div\");\n  descriptionText.innerHTML = description;\n  var descriptionText =\n    descriptionText.textContent || descriptionText.innerText || \"\";\n\n  if (title != null && title != \"\") {\n    return (\n      <div style={{ paddingTop: \"2em\" }}>\n        <Card style={{ maxWidth: \"345\" }}>\n          <CardActionArea>\n            <CardContent>\n              <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                <a href={\"https://cloudflare-ipfs.com/ipfs/\" + hash}>\n                  {titleText}\n                </a>\n              </Typography>\n              <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n                {descriptionText}\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n          <CardActions>\n            <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n              {score ? \"Score: \" + score : \"\"}\n            </Typography>\n            <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n              {size ? \"Size: \" + size + \" bytes\" : \"\"}\n            </Typography>\n            <Typography variant=\"body\" color=\"textSecondary\" component=\"p\">\n              {lastSeen ? \"Last seen: \" + lastSeen.split(\"T\")[0] : \"\"}\n            </Typography>\n            <Button size=\"medium\" color=\"primary\">\n              Metadata\n            </Button>\n          </CardActions>\n        </Card>\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","import React from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\n\nimport { Wiki } from \"./Wiki\"\nimport { Result } from \"./Result\"\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n      wiki: null,\n      title: null,\n      results: null\n    };\n  }\n\n  _search = (query) => {\n    this.setState({\n      wiki: null,\n      title: null,\n      results: null\n    });\n    var queryArray = [];\n    if (query.includes(\" \")) {\n      queryArray = query.split(\" \");\n      query = \"\";\n      for (var i = 0; i < queryArray.length; i++) {\n        queryArray[i] =\n          queryArray[i][0].toUpperCase() + queryArray[i].slice(1).toLowerCase();\n        if (i < queryArray.length - 1) {\n          query += queryArray[i] + \"_\";\n        } else {\n          query += queryArray[i];\n        }\n      }\n      console.log(query);\n    }\n    fetch(\"https://en.wikipedia-on-ipfs.org/wiki/\" + query + \".html\")\n      .then(response => response.text())\n      .then(data => {\n        var parser = new DOMParser();\n        var doc = parser.parseFromString(data, \"text/html\");\n        this.setState({\n          wiki: this._getElementByXpath(doc, \"/html/body/div[1]/div/p[2]\"),\n          title: query\n        });\n      })\n      .catch(error => console.error(error));\n    fetch(\"https://api.ipfs-search.com/v1/search?q=\" + query)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          results: data.hits\n        });\n      })\n      .catch(error => console.error(error));\n  }\n\n  _getMetaData(hash) {\n    fetch(\"https://api.ipfs-search.com/v1/metadata/\" + hash)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.error(error));\n  }\n\n  _getElementByXpath(doc, path) {\n    return doc.evaluate(path, doc, null, XPathResult.STRING_TYPE, null)\n      .stringValue;\n  }\n\n  createCards = rows => {\n    let results = [];\n    for (var result in rows) {\n      results.push(\n        <Result\n          title={rows[result].title}\n          hash={rows[result].hash}\n          description={rows[result].description}\n          lastSeen={rows[result][\"last-seen\"]}\n          score={rows[result].score}\n          size={rows[result].size}\n        />\n      );\n    }\n    return results;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.results === null ? (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"45vh\"\n            }}\n          >\n            <div style={{ padding: \"2em\" }}>\n              <h1>InterPlanetary File System</h1>\n              <h3>Search the Distributed Web</h3>\n            </div>\n            <SearchBar\n              style={{ width: \"50%\" }}\n              value={this.state.value}\n              onChange={newValue => this.setState({ value: newValue })}\n              onRequestSearch={() => this._search(this.state.value)}\n              onCancelSearch={() => this.setState({ value: \"\" })}\n            />\n            <h5>\n              Running your own{\" \"}\n              <a href=\"https://docs.ipfs.io/introduction/usage/\">IPFS node</a>{\" \"}\n              will speed up your search and help others\n            </h5>\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              padding: \"2em\"\n            }}\n          >\n            <h1>Search the Distributed Web</h1>\n            <SearchBar\n              style={{ width: \"60%\" }}\n              value={this.state.value}\n              onChange={newValue => this.setState({ value: newValue })}\n              onRequestSearch={() => this._search(this.state.value)}\n              onCancelSearch={() => this.setState({ value: \"\" })}\n            />\n          </div>\n        )}\n        <div\n          style={{\n            textAlign: \"left\",\n            padding: \"2em\"\n          }}\n        >\n          <div>\n            <Wiki\n              title={this.state.title}\n              about={this.state.wiki}\n              link={\n                \"https://en.wikipedia-on-ipfs.org/wiki/\" +\n                this.state.title +\n                \".html\"\n              }\n            />\n          </div>\n          <div>{this.createCards(this.state.results)}</div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <a style={{ padding: \"0.75em\" }} href=\"http://ipfs-search.com/api\">\n            API\n          </a>\n          <a\n            style={{ padding: \"0.75em\" }}\n            href=\"https://github.com/Lucas-Kohorst/ipfs-search-engine\"\n          >\n            Code\n          </a>\n          <a\n            style={{ padding: \"0.75em\" }}\n            href=\"mailto: kohorstlucas@gmail.com\"\n          >\n            Contact\n          </a>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport { Home };\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Home } from './Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}